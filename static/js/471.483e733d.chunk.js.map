{"version":3,"file":"static/js/471.483e733d.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/selectors.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormStyled } from 'formik';\nimport { ErrorMessage as ErrorStyled } from 'formik';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n`;\n\nexport const Form = styled(FormStyled)`\n  display: flex;\n  flex-direction: column;\n  align-items: baseline;\n  gap: 10px;\n\n  label {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n  p {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: #ffffff;\n  border-radius: 8px;\n  :hover {\n    background-color: #9999df;\n  }\n`;\n\nexport const ErrorMessage = styled(ErrorStyled)`\n  color: red;\n`;\n","import React from 'react';\nimport { Field, Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { addContact } from 'api/api';\nimport { Button, TextField, Box, Typography } from '@mui/material';\nimport { Form } from './ContactForm.styled';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required!'),\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required!'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const handlerSubmit = (values, actions) => {\n    const isDuplicate = contacts.some(contact => contact.name === values.name);\n\n    if (isDuplicate) {\n      Notify.info(`${values.name} is already in contacts`);\n      actions.resetForm();\n    } else {\n      dispatch(addContact(values))\n        .unwrap()\n        .then(() => {\n          actions.resetForm();\n        })\n        .catch(error => {\n          Notify.error('An error occurred while adding the contact.');\n        });\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handlerSubmit}\n    >\n      <Form>\n        <Box marginBottom={2}>\n          <Typography variant=\"body1\">Name</Typography>\n          <Field\n            as={TextField}\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            type=\"text\"\n            name=\"name\"\n          />\n          <ErrorMessage component=\"p\" name=\"name\" />\n        </Box>\n\n        <Box marginBottom={2}>\n          <Typography variant=\"body1\">Number</Typography>\n          <Field\n            as={TextField}\n            variant=\"outlined\"\n            fullWidth\n            size=\"small\"\n            type=\"tel\"\n            name=\"number\"\n          />\n          <ErrorMessage component=\"p\" name=\"number\" />\n        </Box>\n\n        <Button variant=\"outlined\" type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    </Formik>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, removeContact } from 'api/api';\nimport { getFilter } from 'redux/filterSlice';\nimport { List, IconButton, Typography, Box, ListItem } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(getFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box>\n      <List>\n        {contacts\n          .filter(({ name }) => name.toLowerCase().includes(filter))\n          .map(({ id, name, number }) => (\n            <ListItem\n              sx={{ display: 'flex', justifyContent: 'space-between' }}\n              key={id}\n            >\n              <Typography>\n                {name}: {number}\n              </Typography>\n              <IconButton\n                size=\"small\"\n                aria-label=\"delete\"\n                onClick={() => dispatch(removeContact(id))}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItem>\n          ))}\n      </List>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\nimport { TextField, Box } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Box marginY={2}>\n      <TextField\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        size=\"small\"\n        onChange={evt =>\n          dispatch(filterContact(evt.target.value.toLowerCase()))\n        }\n      />\n    </Box>\n  );\n};\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'api/api';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Container, Box } from '@mui/material';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectLoading } from 'redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <div>{isLoading && 'Request in progress...'}</div>\n\n        <ContactForm />\n\n        <Filter />\n        <ContactList />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","FormStyled","_templateObject2","_templateObject3","ErrorStyled","_templateObject4","validationSchema","yup","shape","name","matches","required","number","initialValues","ContactForm","dispatch","useDispatch","contacts","useSelector","state","items","_jsx","Formik","onSubmit","values","actions","some","contact","Notify","concat","resetForm","addContact","unwrap","then","catch","error","children","_jsxs","Box","marginBottom","Typography","variant","Field","as","TextField","fullWidth","size","type","ErrorMessage","component","Button","ContactList","filter","getFilter","useEffect","fetchContacts","List","_ref","toLowerCase","includes","map","_ref2","id","ListItem","sx","display","justifyContent","IconButton","onClick","removeContact","DeleteIcon","Filter","marginY","label","onChange","evt","filterContact","target","value","selectLoading","loading","isLoading","Container","flexDirection","alignItems"],"sourceRoot":""}